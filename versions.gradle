/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def versions = [:]
versions.android_gradle_plugin = '3.3.2'
versions.apache_commons = "2.5"
versions.arch_core = "2.0.1"
versions.atsl_rules = "1.1.1"
versions.atsl_runner = "1.1.1"
versions.atsl_junit = "1.1.0"
versions.constraint_layout = "2.0.0-alpha5"
versions.core_ktx = "1.0.0"
versions.dagger = "2.22.1"
versions.dexmaker = "2.2.0"
versions.espresso = "3.1.1"
versions.fragment = "1.1.0"
versions.glide = "4.9.0"
versions.hamcrest = "1.3"
versions.junit = "4.12"
versions.kotlin = "1.3.20"
versions.lifecycle = "2.0.0"
versions.mockito = "2.25.0"
versions.mockito_all = "1.10.19"
versions.mockito_android = "2.25.0"
versions.mockwebserver = "3.14.1"
versions.navigation = "2.1.0-alpha04"
versions.paging = "2.1.0-rc01"
versions.retrofit = "2.3.0"
versions.robolectric = "4.2"
versions.room = "2.1.0-beta01"
versions.rx_android = "2.1.1"
versions.rx_kotlin = "2.3.0"
versions.rxjava2 = "2.2.8"
versions.support = "1.0.0"
versions.timber = "4.5.1"
versions.work = "2.0.0-rc01"
versions.javax = "1.0"
versions.javax_inject = "1"
versions.google_gson = "2.8.2"
versions.okhttp = "3.14.1"
versions.status_bar_util_library = "1.5.1"
versions.flexible_adapter = "5.1.0"
versions.flexible_adapter_ui = "1.0.0"
versions.google_services = "4.2.0"
versions.firebase_core = "16.0.8"
versions.google_maps_services = "0.2.4"
versions.play_services = "17.0.0"
versions.permission_dispatcher = "4.3.1"
versions.reactive_streams = "1.0.0"
versions.auto_value = "1.5.2"
versions.maps_utils = "0.5"
versions.android_gif = "1.2.16"
versions.fabric_core = "1.29.0"
versions.fabric_crashlytics = "2.10.0"
versions.slidinguppanel = "3.4.0"
versions.stepview = "1.5.0"
versions.facebook = "[5,6)"
versions.infinitepager = "1.0.2"
versions.indefinitepagerindicator = "1.0.10"
versions.loopingviewpager = "1.1.4"

def deps = [:]

def support = [:]
support.annotations = "androidx.annotation:annotation:$versions.support"
support.app_compat = "androidx.appcompat:appcompat:1.1.0"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.support"
support.cardview = "androidx.cardview:cardview:$versions.support"
support.design = "com.google.android.material:material:$versions.support"
support.v4 = "androidx.legacy:legacy-support-v4:1.0.0-alpha1"
support.core_utils = "androidx.legacy:legacy-support-core-utils:$versions.support"
support.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"
support.fragment_runtime = "androidx.fragment:fragment:${versions.fragment}"
support.fragment_runtime_ktx = "androidx.fragment:fragment-ktx:${versions.fragment}"
support.fragment_testing = "androidx.fragment:fragment-testing:${versions.fragment}"
deps.support = support

def javax = [:]
javax.annotations = "javax.annotation:jsr250-api:$versions.javax"
javax.inject = "javax.inject:javax.inject:$versions.javax_inject"
deps.javax = javax

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
deps.lifecycle = lifecycle

def arch_core = [:]
arch_core.runtime = "androidx.arch.core:core-runtime:$versions.arch_core"
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.rxjava = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit

def okhttp = [:]
okhttp.runtime = "com.squareup.okhttp3:okhttp:$versions.okhttp"
okhttp.logging = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
deps.okhttp = okhttp

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def atsl = [:]
atsl.runner = "androidx.test:runner:$versions.atsl_runner"
atsl.rules = "androidx.test:rules:$versions.atsl_runner"
atsl.ext_junit = "androidx.test.ext:junit:$versions.atsl_junit"
deps.atsl = atsl

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
mockito.android = "org.mockito:mockito-android:$versions.mockito_android"
deps.mockito = mockito

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
kotlin.rx_kotlin = "io.reactivex.rxjava2:rxkotlin:$versions.rx_kotlin"
deps.kotlin = kotlin

deps.paging_ktx = "androidx.paging:paging-runtime-ktx:$versions.paging"

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
glide.okhttp_integration = "com.github.bumptech.glide:okhttp3-integration:$versions.glide"
deps.glide = glide

deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"
deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.junit = "junit:junit:$versions.junit"
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.robolectric = "org.robolectric:robolectric:$versions.robolectric"
deps.google_gson = "com.google.code.gson:gson:$versions.google_gson"
ext.deps = deps

def build_versions = [:]
build_versions.min_sdk = 21
build_versions.target_sdk = 28
build_versions.build_tools = "28.0.3"
ext.build_versions = build_versions

def work = [:]
work.runtime = "androidx.work:work-runtime:$versions.work"
work.testing = "androidx.work:work-testing:$versions.work"
work.firebase = "androidx.work:work-firebase:$versions.work"
work.runtime_ktx = "androidx.work:work-runtime-ktx:$versions.work"
deps.work = work

def navigation = [:]
navigation.runtime = "androidx.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "androidx.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment = "androidx.navigation:navigation-fragment:$versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ui = "androidx.navigation:navigation-ui:$versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.navigation = navigation

def status_bar_util = [:]
status_bar_util.library = "com.jaeger.statusbarutil:library:$versions.status_bar_util_library"
deps.status_bar_util = status_bar_util

def flexible_adapter = [:]
flexible_adapter.adapter = "eu.davidea:flexible-adapter:$versions.flexible_adapter"
flexible_adapter.adapter_ui = "eu.davidea:flexible-adapter-ui:$versions.flexible_adapter_ui"
deps.flexible_adapter = flexible_adapter

def google_services = [:]
google_services.services = "com.google.gms:google-services:$versions.google_services"
google_services.firebase_core = "com.google.firebase:firebase-core:$versions.firebase_core"
google_services.google_maps_services = "com.google.maps:google-maps-services:$versions.google_maps_services"
google_services.play_services_maps = "com.google.android.gms:play-services-maps:$versions.play_services"
google_services.play_services_tagmanager = "com.google.android.gms:play-services-tagmanager:$versions.play_services"
deps.google_services = google_services

def permission_dispatcher = [:]
permission_dispatcher.core = "org.permissionsdispatcher:permissionsdispatcher:$versions.permission_dispatcher"
permission_dispatcher.kapt = "org.permissionsdispatcher:permissionsdispatcher-processor:$versions.permission_dispatcher"
deps.permission_dispatcher = permission_dispatcher

def reactive_streams = [:]
reactive_streams.core = "android.arch.lifecycle:reactivestreams:$versions.reactive_streams"
deps.reactive_streams = reactive_streams

def auto_value = [:]
auto_value.core = "com.google.auto.value:auto-value:$versions.auto_value"
deps.auto_value = auto_value

def maps_utils = [:]
maps_utils.core = "com.google.maps.android:android-maps-utils:$versions.maps_utils"
deps.maps_utils = maps_utils

def joda = [:]
joda.time = "joda-time:joda-time:2.10.1"
deps.joda = joda

def photo_view = [:]
photo_view.view = "com.github.chrisbanes:PhotoView:2.0.0"
deps.photo_view = photo_view

def android_gif = [:]
android_gif.drawable = "pl.droidsonroids.gif:android-gif-drawable:$versions.android_gif"
deps.android_gif = android_gif

def fabric = [:]
fabric.core = "io.fabric.tools:gradle:$versions.fabric_core"
fabric.crashlytics = "com.crashlytics.sdk.android:crashlytics:$versions.fabric_crashlytics"
deps.fabric = fabric

def stripe = [:]
stripe.stripe = "com.stripe:stripe-android:9.0.1"
deps.stripe = stripe

def blurry = [:]
blurry.blurry = "jp.wasabeef:blurry:3.0.0"
deps.blurry = blurry

def google_pay = [:]
google_pay.wallet = "com.google.android.gms:play-services-wallet:16.0.1"
deps.google_pay = google_pay

def slidinguppanel = [:]
slidinguppanel.lib = "com.sothree.slidinguppanel:library:$versions.slidinguppanel"
deps.slidinguppanel = slidinguppanel

def stepview = [:]
stepview.lib = "com.shuhart.stepview:stepview:$versions.stepview"
deps.stepview = stepview

def facebook = [:]
facebook.lib = "com.facebook.android:facebook-android-sdk:$versions.facebook"
deps.facebook = facebook

def infinitepager = [:]
infinitepager.lib = "com.github.devlight:infinitecycleviewpager:$versions.infinitepager"
deps.infinitepager = infinitepager

def indefinitepagerindicator = [:]
indefinitepagerindicator.lib = "com.ryanjeffreybrooks:indefinitepagerindicator:$versions.indefinitepagerindicator"
deps.indefinitepagerindicator = indefinitepagerindicator

def loopingviewpager = [:]
loopingviewpager.lib = "com.asksira.android:loopingviewpager:$versions.loopingviewpager"
deps.loopingviewpager = loopingviewpager

ext.deps = deps

static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.mavenCentral()
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    handler.maven { url "https://kotlin.bintray.com/kotlinx/" }
    handler.maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
    handler.maven { url "https://jitpack.io" }
    // For kotlinx-metadata-jvm used by Room 2.1.0 (KT-27991)
}

ext.addRepos = this.&addRepos